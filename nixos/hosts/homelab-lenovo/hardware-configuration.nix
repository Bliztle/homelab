# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "ahci" "usb_storage" "sd_mod"];
  boot.initrd.kernelModules = ["dm-snapshot" "usb_storage" "sd_mod" "xhci_pci" "uas"];
  boot.kernelModules = ["kvm-intel"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/7511f0d5-59a3-4392-9d93-7347677e877a";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/1D8A-8F34";
    fsType = "vfat";
    options = ["fmask=0077" "dmask=0077"];
  };

  fileSystems."/mnt/longhorn/bay2" = {
    device = "/dev/mapper/cryptBay2";
    fsType = "ext4";
  };

  fileSystems."/mnt/longhorn/bay3" = {
    device = "/dev/mapper/cryptBay3";
    fsType = "ext4";
  };

  boot.initrd.luks.devices = {
    # Internal SSD NixOS partition
    "luks-2bdaac85-cd93-4919-83f8-547c5d4e0b6f".device = "/dev/disk/by-uuid/2bdaac85-cd93-4919-83f8-547c5d4e0b6f";
    # External HDD 0.9TB Longhorn #1
    cryptBay2.device = "/dev/disk/by-id/ata-SAMSUNG_HM100UI_S2GHJ9EB318173";
    # External HDD 0.9TB Longhorn #2
    cryptBay3.device = "/dev/disk/by-id/ata-SAMSUNG_HM100UI_S2GHJ9BB504068";
  };

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp1s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
