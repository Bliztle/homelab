# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "uas" "thunderbolt" "vmd" "nvme" "usb_storage" "sd_mod" "rtsx_pci_sdmmc"];
  boot.initrd.kernelModules = ["usb_storage" "sd_mod" "xhci_pci" "uas"];
  boot.kernelModules = ["kvm-intel"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/a3439fa5-210a-4e9c-8794-d09f2554d2e9";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/9D27-033F";
    fsType = "vfat";
    options = ["fmask=0077" "dmask=0077"];
  };

  fileSystems."/mnt/longhorn/bay2" = {
    device = "/dev/mapper/cryptBay2";
    fsType = "ext4";
  };

  fileSystems."/mnt/longhorn/bay3" = {
    device = "/dev/mapper/cryptBay3";
    fsType = "ext4";
  };

  boot.initrd.luks.devices = {
    # Nix partition
    # cryptBay1.device = "/dev/disk/by-uuid/23e628ca-75ff-44dc-b162-009322670866";
    cryptBay1.device = "/dev/disk/by-id/nvme-KINGSTON_SNV2S1000G_50026B7686D3C7D9-part2";
    # SSD Longhorn partition
    cryptBay2.device = "/dev/disk/by-id/nvme-KINGSTON_SNV2S1000G_50026B7686D3C7D9-part3";
    # HDD 1,8TB Longhorn - This should be optional
    cryptBay3.device = "/dev/disk/by-id/wwn-0x50004cf20e9c09a1";
    # cryptBay3.device = "/dev/disk/by-uuid/91cac90e-b577-4eb4-b458-cca7f4669c6e";
  };

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s20f0u1u4.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
